name: airflow-mlops
services:
  postgres-airflow:
    image: postgres:15
    environment:
      POSTGRES_DB: airflow
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
    volumes:
      - ./pgdata:/var/lib/postgresql/data

  # Build Airflow image once via airflow-init, others reuse it
  airflow-init:
    build: .
    image: airflow-mlops:3.1
    env_file: .env
    command: >
      bash -c "airflow db migrate"
    user: "0:0"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs

  airflow-web:
    image: airflow-mlops:3.1
    depends_on: [airflow-init, postgres-airflow]
    env_file: .env
    command: "api-server" 
    environment:
      HOST_DATA_DIR: ${HOST_DATA_DIR}
      HOST_MODELS_DIR: ${HOST_MODELS_DIR}    
    ports: ["8080:8080"]
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./data:/opt/airflow/data
      - ./models:/opt/airflow/models

  airflow-scheduler:
    image: airflow-mlops:3.1
    depends_on: [airflow-web]  # or [postgres-airflow, airflow-init]
    env_file: .env
    environment:
      HOST_DATA_DIR: ${HOST_DATA_DIR}
      HOST_MODELS_DIR: ${HOST_MODELS_DIR}    
    command: scheduler
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./data:/opt/airflow/data
      - ./models:/opt/airflow/models
      - /var/run/docker.sock:/var/run/docker.sock  # needed for DockerOperator

  airflow-dag-processor:
    image: airflow-mlops:3.1
    depends_on: [airflow-web]
    env_file: .env
    command: dag-processor
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs

  # Optional: only if you use deferrable operators
  # airflow-triggerer:
  #   image: airflow-mlops:3.1
  #   depends_on: [airflow-web]
  #   env_file: .env
  #   command: triggerer
  #   volumes:
  #     - ./dags:/opt/airflow/dags
  #     - ./logs:/opt/airflow/logs

  # Model servers (blue/green)

# Build model-server image once via airflow-init, others reuse it
  model-blue:
    build: ./docker/model-server
    image: model-server:3.1
    container_name: model-blue
    environment:
      - MODELS_DIR=/models
      - MODEL_SLOT=blue
      - MODEL_NAME=blue
    volumes:
      - ./models:/models
    ports:
      - "8001:8000"

  model-green:
    image: model-server:3.1
    container_name: model-green
    environment:
      - MODELS_DIR=/models
      - MODEL_SLOT=green
      - MODEL_NAME=green
    volumes:
      - ./models:/models
    ports:
      - "8002:8000"

  nginx-gateway:
    image: nginx:1.27
    depends_on: [model-blue, model-green]
    ports: ["8088:80"]
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro

  # Task images (for DockerOperator)
  etl-image:
    build: ./docker/etl
    image: etl-tasks:3.1

  trainer-image:
    build: ./docker/trainer
    image: trainer-tasks:3.1

  dq-image:
    build: ./docker/dq
    image: dq-tasks:3.1